{"version":3,"file":"static/js/849.0283429b.chunk.js","mappings":"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","sources":["components/bootstrap/Progress.js","pages/dashboard/TokensPage.js"],"sourcesContent":["import React, { Children, cloneElement, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n\t// stylelint-disable-next-line selector-type-no-unknown\n\tdynamicHeight: (props) => ({\n\t\theight: props.height,\n\t}),\n});\n\nconst Progress = forwardRef(\n\t(\n\t\t{\n\t\t\tvalue,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\theight,\n\t\t\tisStriped,\n\t\t\tisAnimated,\n\t\t\tisAutoColor,\n\t\t\tcolor,\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tisOnlyBar,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst _value = (100 * (value - min)) / (max - min);\n\t\tconst classes = useStyles({ height });\n\n\t\tconst _onlyBar = (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: `${_value}%`,\n\t\t\t\t}}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'progress-bar',\n\t\t\t\t\t{\n\t\t\t\t\t\t'bg-danger': _value < 25 && isAutoColor,\n\t\t\t\t\t\t'bg-warning': _value >= 25 && _value < 50 && isAutoColor,\n\t\t\t\t\t\t'bg-info': _value >= 50 && _value < 75 && isAutoColor,\n\t\t\t\t\t\t'bg-success': _value >= 75 && isAutoColor,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t[`bg-${color}`]: color && !isAutoColor,\n\t\t\t\t\t\t'progress-bar-striped': isStriped || isAnimated,\n\t\t\t\t\t\t'progress-bar-animated': isAnimated,\n\t\t\t\t\t},\n\t\t\t\t)}\n\t\t\t\trole='progressbar'\n\t\t\t\taria-label={`${value}%`}\n\t\t\t\taria-valuenow={value}\n\t\t\t\taria-valuemin={min}\n\t\t\t\taria-valuemax={max}\n\t\t\t/>\n\t\t);\n\n\t\tif (isOnlyBar) {\n\t\t\treturn _onlyBar;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames('progress', { [classes.dynamicHeight]: !!height }, className)}\n\t\t\t\tstyle={{\n\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t...props.style,\n\t\t\t\t}}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}>\n\t\t\t\t{children\n\t\t\t\t\t? Children.map(children, (child) => cloneElement(child, { isOnlyBar: true }))\n\t\t\t\t\t: _onlyBar}\n\t\t\t</div>\n\t\t);\n\t},\n);\nProgress.propTypes = {\n\tvalue: PropTypes.number,\n\tmin: PropTypes.number,\n\tmax: PropTypes.number,\n\t/**\n\t * If the value is a number, it is automatically used as px. Example: 10, '1rem', '5vh', etc.\n\t */\n\theight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tisStriped: PropTypes.bool,\n\tisAnimated: PropTypes.bool,\n\tisAutoColor: PropTypes.bool,\n\tcolor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t\t'link',\n\t\t'brand',\n\t\t'brand-two',\n\t\t'storybook',\n\t]),\n\t/**\n\t * To use more than one `<Progress />`\n\t */\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string,\n};\nProgress.defaultProps = {\n\tvalue: 0,\n\tmin: 0,\n\tmax: 100,\n\theight: null,\n\tisStriped: false,\n\tisAnimated: false,\n\tisAutoColor: false,\n\tcolor: null,\n\tchildren: null,\n\tclassName: null,\n};\n\nexport default Progress;\n","import React, { useState } from 'react';\nimport PageWrapper from '../../layout/PageWrapper/PageWrapper';\nimport Page from '../../layout/Page/Page';\nimport { combineMenu } from '../../static/menu';\nimport Card, { CardActions, CardBody, CardHeader, CardLabel, CardTitle } from '../../components/bootstrap/Card';\nimport Button from '../../components/bootstrap/Button';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Dropdown, { DropdownItem, DropdownMenu, DropdownToggle } from '../../components/bootstrap/Dropdown';\nimport Progress from '../../components/bootstrap/Progress';\nimport Icon from '../../components/icon/Icon';\nimport { useClipboard } from 'use-clipboard-copy';\nimport showNotification from '../../components/extras/showNotification';\nimport { useSelector } from 'react-redux';\n\n// eslint-disable-next-line no-unused-vars\n\nconst TableRow = ({ index, image, tokenname, currentCap, hardCap, color, tokenaddress, participants, status, startDate, presaleEndDate }) => {\n  const clipboard = useClipboard();\n  const navigate = useNavigate();\n\n  const ImageOrIcon = () => {\n    if(image) {\n      return (<img src={image} alt='coin cover' />)\n    }\n    return (<Icon size='4x' icon={'Circle'} />)\n  }\n  const _startDate = new Date(startDate);\n  const _endDate = new Date(presaleEndDate);\n  const today = new Date();\n\n  let statusText = '';\n  if (['2','3'].includes(status)) {\n    statusText = 'Completed'\n  }else if(status === '0') {\n    const difference = _startDate.getTime() - today.getTime() \n    let diff_in_days = Math.round(difference / (1000 * 3600 * 24))\n    if (diff_in_days === 0) statusText = 'Starts Tomorrow'\n    else statusText = `Starts In ${diff_in_days} day(s)`;\n  }else if (status === '1') {\n    const difference =  _endDate.getTime() - today.getTime()\n    let diff_in_days = Math.round(difference / (1000 * 3600 * 24))\n    statusText = `${diff_in_days + 1} day(s) left`\n  }\n\n  return(<tr>\n    <td>{index}</td>\n    <td><ImageOrIcon /></td>\n    <td><h3>{tokenname} <Icon style={{cursor:\"pointer\"}} onClick={() => {\n      clipboard.copy(tokenaddress);\n      showNotification(\n        'Copied to Clipboard',\n        <div className='row d-flex align-items-center'>\n          <div className='col-auto'>\n            <Icon icon={'CardHeading'} className='h1' />\n          </div>\n          <div className='col-auto h5'>{tokenaddress}</div>\n        </div>,\n      );\n    }} icon={'ContentCopy'} /> </h3></td>\n    <td>\n      { `${parseFloat(currentCap).toFixed(2)}/${hardCap}` } BNB\n      <Progress color={color} min={0} max={hardCap} value={currentCap} isAnimated={true} height={30} />\n    </td>\n    <td>{participants} Participants</td>\n    <td>{ statusText }</td>\n    <td><Button className='rounded-0' color='primary' onClick={() => navigate(`/dashboard/token/${tokenaddress}`)} isOutline isLight>View</Button></td>\n  </tr>)\n}\n\n// eslint-disable-next-line no-unused-vars\nconst filtersCode = ['1', '2', '0', '3', \"all\"]\nconst filtersText = ['live', 'completed', 'awaiting start', 'failed', \"all\"]\nconst Dashboard = () => {\n  const navigate = useNavigate();\n  let { filter } = useParams();\n\n  const tokensAndPairs = useSelector(state => state.tokensAndPairs.tokens);\n  const [filterState, setFilterStatus] = useState(filtersText.includes(filter) ? filtersText.indexOf(filter) : 'all')\n\n  function filterResult(item, filter) {\n    if (filtersText[filter] === 'all') return item;\n    return item.filter(elem => elem.status === filtersCode[filter]);\n  }\n  \n\treturn (\n\t\t<PageWrapper title={combineMenu.launchpad.text}>\n\t\t\t<Page container='fluid'>\n        <div className='row'>\n          <div className='col-xl-12'>\n            <Card\n            className='rounded-0 card-strech-full'\n            border={1}\n            shadow='sm'\n            >\n              <CardHeader>\n                <CardLabel icon={'Cases'}>\n                  <CardTitle tag='h4' className='h5'>All Tokens</CardTitle>\n                </CardLabel>\n                <CardActions className='d-flex'>\n                  <Button \n                  size='sm' \n                  isLight \n                  rounded={0} \n                  color='primary' \n                  isOutline \n                  onClick={() => navigate('/dashboard/launchpad')}>\n                    Create Presale\n                    <Icon icon='ArrowForward' />\n                  </Button>\n\n                  <Dropdown>\n                    <DropdownToggle>\n                      <Button rounded={0} color='success' isLight className='text-capitalize'>Filter By: {filtersText[filterState]}</Button>\n                    </DropdownToggle>\n                    <DropdownMenu>\n                      { filtersText.map((item, idx) => (\n                        <DropdownItem key={idx}>\n                          <Button onClick={()=>setFilterStatus(idx)} className='text-capitalize'>{item}</Button>\n                        </DropdownItem>\n                      )) }\n                    </DropdownMenu>\n                  </Dropdown>\n                </CardActions>\n              </CardHeader>\n\n              <CardBody>\n                { filterResult(tokensAndPairs, filterState).length < 1 ? (<>\n                  <div className='text-center text-muted'>\n                    <Icon size='5x' icon='AccessTime' />\n                    <h3>No <span className='text-capitalize'>{filterState === 0 ? filtersText[filterState] : `Presale ${filtersText[filterState]}`}</span> Tokens</h3>\n                    <Button size='sm' isLight rounded={0} color='primary' isOutline onClick={() => navigate('/dashboard/launchpad')}>\n                      Create Presale <Icon icon='ArrowForward' />\n                    </Button>\n                  </div>\n                </>) : (<>\n                  <table className='table table-modern table-hover'>\n                    <tbody>\n                      {filterResult(tokensAndPairs, filterState).map((i, index) => (\n                        <TableRow key={i.tokenaddress} {...i} index={index + 1} />\n                      ))}\n                    </tbody>\n                  </table>\n                </>) }\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default Dashboard;\n"],"names":["useStyles","createUseStyles","dynamicHeight","props","height","Progress","forwardRef","ref","value","min","max","isStriped","isAnimated","isAutoColor","color","children","className","isOnlyBar","_value","classes","_onlyBar","style","width","classNames","role","Children","child","cloneElement","defaultProps","TableRow","index","image","tokenname","currentCap","hardCap","tokenaddress","participants","status","startDate","presaleEndDate","clipboard","useClipboard","navigate","useNavigate","ImageOrIcon","src","alt","size","icon","_startDate","Date","_endDate","today","statusText","includes","difference","getTime","diff_in_days","Math","round","cursor","onClick","copy","showNotification","parseFloat","toFixed","isOutline","isLight","filtersCode","filtersText","filter","useParams","tokensAndPairs","useSelector","state","tokens","useState","indexOf","filterState","setFilterStatus","filterResult","item","elem","title","combineMenu","container","border","shadow","tag","rounded","map","idx","length","i"],"sourceRoot":""}