{"version":3,"file":"static/js/961.e30a1022.chunk.js","mappings":"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","sources":["components/bootstrap/Progress.js","pages/dashboard/DefaultDashboard.js","pages/dashboard/Dashboard.js"],"sourcesContent":["import React, { Children, cloneElement, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n\t// stylelint-disable-next-line selector-type-no-unknown\n\tdynamicHeight: (props) => ({\n\t\theight: props.height,\n\t}),\n});\n\nconst Progress = forwardRef(\n\t(\n\t\t{\n\t\t\tvalue,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\theight,\n\t\t\tisStriped,\n\t\t\tisAnimated,\n\t\t\tisAutoColor,\n\t\t\tcolor,\n\t\t\tchildren,\n\t\t\tclassName,\n\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\tisOnlyBar,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst _value = (100 * (value - min)) / (max - min);\n\t\tconst classes = useStyles({ height });\n\n\t\tconst _onlyBar = (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: `${_value}%`,\n\t\t\t\t}}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'progress-bar',\n\t\t\t\t\t{\n\t\t\t\t\t\t'bg-danger': _value < 25 && isAutoColor,\n\t\t\t\t\t\t'bg-warning': _value >= 25 && _value < 50 && isAutoColor,\n\t\t\t\t\t\t'bg-info': _value >= 50 && _value < 75 && isAutoColor,\n\t\t\t\t\t\t'bg-success': _value >= 75 && isAutoColor,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t[`bg-${color}`]: color && !isAutoColor,\n\t\t\t\t\t\t'progress-bar-striped': isStriped || isAnimated,\n\t\t\t\t\t\t'progress-bar-animated': isAnimated,\n\t\t\t\t\t},\n\t\t\t\t)}\n\t\t\t\trole='progressbar'\n\t\t\t\taria-label={`${value}%`}\n\t\t\t\taria-valuenow={value}\n\t\t\t\taria-valuemin={min}\n\t\t\t\taria-valuemax={max}\n\t\t\t/>\n\t\t);\n\n\t\tif (isOnlyBar) {\n\t\t\treturn _onlyBar;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={classNames('progress', { [classes.dynamicHeight]: !!height }, className)}\n\t\t\t\tstyle={{\n\t\t\t\t\t// eslint-disable-next-line react/prop-types\n\t\t\t\t\t...props.style,\n\t\t\t\t}}\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...props}>\n\t\t\t\t{children\n\t\t\t\t\t? Children.map(children, (child) => cloneElement(child, { isOnlyBar: true }))\n\t\t\t\t\t: _onlyBar}\n\t\t\t</div>\n\t\t);\n\t},\n);\nProgress.propTypes = {\n\tvalue: PropTypes.number,\n\tmin: PropTypes.number,\n\tmax: PropTypes.number,\n\t/**\n\t * If the value is a number, it is automatically used as px. Example: 10, '1rem', '5vh', etc.\n\t */\n\theight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tisStriped: PropTypes.bool,\n\tisAnimated: PropTypes.bool,\n\tisAutoColor: PropTypes.bool,\n\tcolor: PropTypes.oneOf([\n\t\t'primary',\n\t\t'secondary',\n\t\t'success',\n\t\t'info',\n\t\t'warning',\n\t\t'danger',\n\t\t'light',\n\t\t'dark',\n\t\t'link',\n\t\t'brand',\n\t\t'brand-two',\n\t\t'storybook',\n\t]),\n\t/**\n\t * To use more than one `<Progress />`\n\t */\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string,\n};\nProgress.defaultProps = {\n\tvalue: 0,\n\tmin: 0,\n\tmax: 100,\n\theight: null,\n\tisStriped: false,\n\tisAnimated: false,\n\tisAutoColor: false,\n\tcolor: null,\n\tchildren: null,\n\tclassName: null,\n};\n\nexport default Progress;\n","import React from 'react';\n\nconst DefaultDashboard = () => {\n\n  return(<>\n  </>)\n}\n\nexport default DefaultDashboard;","import React, { useEffect } from 'react';\nimport PageWrapper from '../../layout/PageWrapper/PageWrapper';\nimport Page from '../../layout/Page/Page';\nimport { combineMenu } from '../../static/menu';\nimport Card, { CardActions, CardBody, CardHeader, CardLabel, CardSubTitle, CardTitle } from '../../components/bootstrap/Card';\nimport Button from '../../components/bootstrap/Button';\nimport Icon from '../../components/icon/Icon';\nimport classNames from 'classnames';\nimport useDarkMode from '../../hooks/useDarkMode';\nimport { useNavigate } from 'react-router-dom';\nimport Progress from '../../components/bootstrap/Progress';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DefaultDashboard from './DefaultDashboard';\nimport { BitcoinBtcLogo, EthereumEthLogo, BinanceCoinBnbLogo, StrataTodayLogo, PancakeswapCakeLogo } from '../../components/icon/svg-icons';\nimport bscScanApi from '../../utils/bscScanApi';\n\n// TODO: use store value to switch between arata and strata\nconst Dashboard = () => {\n  const isArata = true\n  const { tokens: tokensAndPairs, stock_rates } = useSelector(state => state.tokensAndPairs)\n\n  const dispatch = useDispatch();\n  const { darkModeStatus } = useDarkMode();\n  const navigate = useNavigate();\n\n  const sorted = tokensAndPairs.sort((first, second) => {\n    if (first.participants > second.participants) return 1\n    if (first.participants < second.participants) return -1\n    return 0\n  });\n  const completedTokens = sorted.filter(x => x.status === '2').slice(0, 3);\n  const liveTokens = sorted.filter(x => x.status === '1').slice(0, 3);\n\n  useEffect(() => {\n    if (!stock_rates) {\n      // get exchange rates from coin api\n      bscScanApi.coinApiMarketRate().then(result => {\n        dispatch({ type: 'UPDATE_STOCKRATES', payload: result })\n      })\n    }\n  }, [stock_rates, dispatch])\n\n  const buyToken = () => {\n    let url = 'https://pancakeswap.finance/swap?outputCurrency='\n    const pancakeSwapLink = isArata ? `${url}0xD07E591E10E41b6B08457C8aa0be6b79369D60a6` : `${url}0x5bE6eC9a5d1EF8390d22342EDA90E2Fc6F1A9f7d`\n    window.open(pancakeSwapLink, '_blank')\n  }\n  \n\treturn (\n\t\t<PageWrapper title={combineMenu.dashboard.text}>\n\t\t\t<Page container='fluid'>\n        <div className='row'>\n          <div className='col-md-12 mb-5'>\n            <div className='intro-text d-flex align-items-center justify-content-between'>\n              <div className='info_left'></div>\n              <div className='info_right'>\n                <div className='d-flex align-items-center justify-content-evenly' style={{width:300}}>\n                  { stock_rates ? (<>\n                    <div className='item d-flex align-items-center'>\n                      <BinanceCoinBnbLogo width={30} />\n                      <h6 style={{margin: '0px 0px 0px 5px'}} className={classNames({ 'text-light': darkModeStatus })}>\n                        ${new Intl.NumberFormat().format(stock_rates.binance)}\n                      </h6>\n                    </div>\n                    <div className='item d-flex align-items-center'>\n                      <EthereumEthLogo width={20} />\n                      <h6 style={{margin: '0px 0px 0px 5px'}} className={classNames({ 'text-light': darkModeStatus })}>\n                        ${new Intl.NumberFormat().format(stock_rates.ethereum)}\n                      </h6>\n                    </div>\n                    <div className='item d-flex align-items-center'>\n                      <BitcoinBtcLogo width={30} />\n                      <h6 style={{margin: '0px 0px 0px 5px'}} className={classNames({ 'text-light': darkModeStatus })}>\n                        ${new Intl.NumberFormat().format(stock_rates.bitcoin)}\n                      </h6>\n                    </div>\n                  </>) : <span className='text-muted'>...</span> }\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* quick actions */}\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='col-md-6'>\n                <Card shadow='md' borderSize={1}>\n                  <CardBody>\n                    {/* <div style={{height:22}} /> */}\n                    <div className='d-flex align-items-center'>\n                      <StrataTodayLogo width={90} height={90} />\n                      <div style={{marginLeft:10}}>\n                        {/* <h3>Buy StrataToday On</h3> */}\n                        <h3>Buy Arata On</h3>\n                        <Card onClick={buyToken} className={classNames({'text-dark bg-l25-primary bg-l10-primary-hover': !darkModeStatus, 'text-light bg-lo50-primary bg-lo25-primary-hover': darkModeStatus})}>\n                          <CardBody className='p-2 d-flex align-items-center justify-content-evenly'>\n                            <PancakeswapCakeLogo width={20} />\n                            <h6>PancakeSwap</h6>\n                          </CardBody>\n                        </Card>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </div>\n\n              <div className='col-md-6'>\n                <Card shadow='md' borderSize={1}>\n                  <CardBody className=''>\n                    <h3><Icon color='primary' icon={'Launch'} /> StrataLaunch</h3>\n                    <p>Save Valuable Time and Launch Your Project With the Security of our Platform!</p>\n                    <Button onClick={() => navigate(`dashboard/tokens/${liveTokens.length >= 2 ? 'live' : 'all'}`)} size='sm' isLight rounded={0} color='primary' isOutline>View IDOs</Button>\n                  </CardBody>\n                </Card>\n              </div>\n\n              <div className='col-md-6'>\n                <Card shadow='md' borderSize={1}>\n                  <CardBody className=''>\n                    {/* <div style={{height:20}} /> */}\n                    <h3>Strata<strong>FairLaunch</strong></h3>\n                    <p>Launch Your Project With Self Provided Liquidity!</p>\n                    <Button onClick={() => navigate('dashboard/launchpad?m=fairlaunch')} size='sm' isLight rounded={0} color='primary' isOutline>Get Started</Button>\n                  </CardBody>\n                </Card>\n              </div>\n\n              <div className='col-md-6'>\n                <Card shadow='md' borderSize={1}>\n                  <CardBody className=''>\n                    <h3>Strata<strong>Airdrop</strong></h3>\n                    <p>Airdrop Tokens to Your Userbase With the Click of a Button!</p>\n                    <Button onClick={() => navigate('dashboard/airdrop')} size='sm' isLight rounded={0} color='primary' isOutline>Get Started</Button>\n                  </CardBody>\n                </Card>\n              </div>\n            </div>\n          </div>\n\n          { sorted.length > 3 ? (<>\n            { liveTokens && liveTokens.length >= 3 ? (<>\n              <div className='col-xl-6'>\n                <Card\n                className='card-strech-full'\n                style={{borderRadius:'0.5rem'}}\n                shadow='sm'\n                borderSize={1}>\n                  <CardHeader>\n                    <CardLabel icon={'Circle'}>\n                      <CardTitle>Live Tokens</CardTitle>\n                      <CardSubTitle><small>Order By: <strong>Popular</strong></small></CardSubTitle>\n                    </CardLabel>\n                    <CardActions>\n                      <Button onClick={() => navigate(`dashboard/tokens/live`)} isOutline={true} color='primary' rounded={0}>View All </Button>\n                    </CardActions>\n                  </CardHeader>\n\n                  <CardBody className='row g-4'>\n                    <Card\n                    className={classNames(\n                      'col-md-6 transition-base rounded-0 mb-0 text-dark',\n                      {\n                        'bg-l25-warning bg-l10-warning-hover':\n                          !darkModeStatus,\n                        'bg-lo50-warning bg-lo25-warning-hover':\n                          darkModeStatus,\n                      },\n                    )}\n                    stretch\n                    shadow='sm'>\n                      <CardBody>\n                        <div className='' style={{height:20}}></div>\n                        <div className='text-center pb-3'>\n                          <Icon icon={'Circle'} size='5x' />\n                          <h3>{liveTokens[0].tokenname}</h3>\n                          <div className='row mb-5'>\n                            <div className='col-md-6'>\n                              <span>BscScan <Icon icon={'ArrowUpRight'} /></span>\n                            </div>\n                            <div className='col-md-6 d-flex align-items-center justify-content-evenly'>\n                              <Icon icon='Twitter' />\n                              <Icon icon='Globe' />\n                              <Icon icon='Telegram' />\n                            </div>\n                          </div>\n\n                          <div className='presale-info'>\n                            <h6 style={{textAlign:'left'}}>Presale status</h6>\n                            <div className={classNames('p-2 rounded-2 mb-3',{\n                              'bg-dark text-light': darkModeStatus,\n                              'bg-light': !darkModeStatus\n                            })}>\n                              {`${liveTokens[0].currentCap}/${liveTokens[0].hardCap} ${liveTokens[0].pair}`}\n                            </div>\n                            <Progress value={liveTokens[0].currentCap} min={0} max={liveTokens[0].hardCap} isAutoColor isAnimated height={30} />\n\n                            <div className='mt-5 d-flex align-items-center justify-content-between'>\n                              <h6>{liveTokens[0].participants} participnts</h6>\n                              <Button onClick={() => navigate('dashboard/token/'+liveTokens[0].tokenaddress)} isOutline isLight color='primary' rounded={0} isLink href='dashboard/tokens'>More <Icon icon={'ArrowForwardIos'} /></Button>\n                            </div>\n                          </div>\n                        </div>\n                      </CardBody>\n                    </Card>\n\n                    <div className='col-md-6'>\n                      {liveTokens.slice(1, liveTokens.length+1).map((item, index) => (\n                        <Card\n                          key={index}\n                          onClick={() => navigate('dashboard/token/'+item.tokenaddress)}\n                          style={{cursor:'pointer'}}\n                          className={classNames(\n                            'transition-base rounded-0 mb-4 text-dark',\n                            {\n                              'bg-l25-secondary bg-l10-secondary-hover':\n                                !darkModeStatus,\n                              'bg-lo50-secondary bg-lo25-secondary-hover':\n                                darkModeStatus,\n                            },\n                          )}\n                          shadow='sm'>\n                          <CardBody>\n                            <div style={{height:50}}></div>\n                            <div className='d-flex align-items-center pb-3 text-center'>\n                              <div className='flex-shrink-0'>\n                                <Icon\n                                  icon='Circle'\n                                  size='5x'\n                                  color='secondary'\n                                />\n                                <h5>{item.tokenname}</h5>\n                              </div>\n                              <div className='flex-grow-1 ms-3'>\n                                <div className={classNames('p-1 rounded-2 mb-3', {\n                                  'bg-dark text-light': darkModeStatus,\n                                  'bg-light text-dark': !darkModeStatus\n                                })}>{`${item.currentCap}/${item.hardCap} ${item.pair}`}</div>\n                                <Progress value={50} min={0} max={100} isAnimated isAutoColor height={20} />\n\n                                <div className='mt-2 d-flex align-items-center justify-content-between'>\n                                  <h6>{item.participants} participnts</h6>\n                                  <h6 className='text-success'>{((item.hardCap - item.currentCap) / item.hardCap) * 100}% <Icon icon={'ArrowUp'} /></h6>\n                                </div>\n                              </div>\n                            </div>\n                          </CardBody>\n                        </Card>\n                      ))}\n                    </div>\n                  </CardBody>\n                </Card>\n              </div>\n            </>) : null }\n              \n            { completedTokens && completedTokens.length >= 3 ? (<>\n              <div className='col-xl-6'>\n                <Card\n                className='col-xl-6 card-strech-full'\n                style={{borderRadius:'0.5rem'}}\n                shadow='sm'\n                borderSize={1}>\n                  <CardHeader>\n                    <CardLabel iconColor='success' icon={'CheckCircle'}>\n                      <CardTitle>Completed Tokens</CardTitle>\n                      <CardSubTitle><small>Order By: <strong>Popular</strong></small></CardSubTitle>\n                    </CardLabel>\n                    <CardActions>\n                      <Button onClick={() => navigate('dashboard/tokens/completed')} isOutline={true} color='success' rounded={0}>View All </Button>\n                    </CardActions>\n                  </CardHeader>\n\n                  <CardBody className='row g-4'>\n                    <Card\n                      className={classNames(\n                        'col-md-6 transition-base rounded-0 mb-0 text-dark',\n                        {\n                          'bg-l25-warning bg-l10-warning-hover':\n                            !darkModeStatus,\n                          'bg-lo50-warning bg-lo25-warning-hover':\n                            darkModeStatus,\n                        },\n                      )}\n                      stretch\n                      shadow='sm'>\n                      <CardBody>\n                        <div className='' style={{height:20}}></div>\n                        <div className='text-center pb-3'>\n                          <Icon icon={'Circle'} size='5x' />\n                          <h3>{completedTokens[0].tokenname}</h3>\n                          <div className='row mb-5'>\n                            <div className='col-md-6'>\n                              <span>BscScan <Icon icon={'ArrowUpRight'} /></span>\n                            </div>\n                            <div className='col-md-6 d-flex align-items-center justify-content-evenly'>\n                              <Icon icon='Twitter' />\n                              <Icon icon='Globe' />\n                              <Icon icon='Telegram' />\n                            </div>\n                          </div>\n\n                          <div className='presale-info'>\n                            <h6 style={{textAlign:'left'}}>Presale status</h6>\n                            <div className={classNames('p-2 rounded-2 mb-3',{\n                              'bg-dark text-light': darkModeStatus,\n                              'bg-light': !darkModeStatus\n                            })}>\n                              {`${completedTokens[0].currentCap}/${completedTokens[0].hardCap} ${completedTokens[0].pair}`}\n                            </div>\n                            <Progress value={completedTokens[0].currentCap} min={0} max={completedTokens[0].hardCap} isAutoColor isAnimated height={30} />\n\n                            <div className='mt-5 d-flex align-items-center justify-content-between'>\n                              <h6>{completedTokens[0].participants} participnts</h6>\n                              <Button onClick={() => navigate('dashboard/token/'+completedTokens[0].tokenaddress)} isOutline isLight color='primary' rounded={0}>More <Icon icon={'ArrowForwardIos'} /></Button>\n                            </div>\n                          </div>\n                        </div>\n                      </CardBody>\n                    </Card>\n\n                    <div className='col-md-6'>\n                      {completedTokens.slice(1, completedTokens.length+1).map((item, index) => (\n                        <Card\n                          key={index}\n                          onClick={() => navigate('dashboard/token/'+item.tokenaddress)}\n                          style={{cursor:'pointer'}}\n                          className={classNames(\n                            'transition-base rounded-0 mb-4 text-dark',\n                            {\n                              'bg-l25-secondary bg-l10-secondary-hover':\n                                !darkModeStatus,\n                              'bg-lo50-secondary bg-lo25-secondary-hover':\n                                darkModeStatus,\n                            },\n                          )}\n                          shadow='sm'>\n                          <CardBody>\n                            <div style={{height:50}}></div>\n                            <div className='d-flex align-items-center pb-3 text-center'>\n                              <div className='flex-shrink-0'>\n                                <Icon\n                                  icon='Circle'\n                                  size='5x'\n                                  color='secondary'\n                                />\n                                <h5>{item.tokenname}</h5>\n                              </div>\n                              <div className='flex-grow-1 ms-3'>\n                                <div className={classNames('p-1 rounded-2 mb-3', {\n                                  'bg-dark text-light': darkModeStatus,\n                                  'bg-light text-dark': !darkModeStatus\n                                })}>{`${item.currentCap}/${item.hardCap} ${item.pair}`}</div>\n                                <Progress value={50} min={0} max={100} isAnimated isAutoColor height={20} />\n\n                                <div className='mt-2 d-flex align-items-center justify-content-between'>\n                                  <h6>{item.participants} participnts</h6>\n                                  <h6 className='text-success'>{((item.hardCap - item.currentCap) / item.hardCap) * 100}% <Icon icon={'ArrowUp'} /></h6>\n                                </div>\n                              </div>\n                            </div>\n                          </CardBody>\n                        </Card>\n                      ))}\n                    </div>\n                  </CardBody>\n                </Card>\n              </div>\n            </>) : null}\n\n\n          </>) : (<>\n            {/* if not enough presale tokens yet */}\n            <DefaultDashboard />\n          </>) }\n        </div>\n\t\t\t</Page>\n\t\t</PageWrapper>\n\t);\n};\n\nexport default Dashboard;\n"],"names":["useStyles","createUseStyles","dynamicHeight","props","height","Progress","forwardRef","ref","value","min","max","isStriped","isAnimated","isAutoColor","color","children","className","isOnlyBar","_value","classes","_onlyBar","style","width","classNames","role","Children","child","cloneElement","defaultProps","useSelector","state","tokensAndPairs","tokens","stock_rates","dispatch","useDispatch","darkModeStatus","useDarkMode","navigate","useNavigate","sorted","sort","first","second","participants","completedTokens","filter","x","status","slice","liveTokens","useEffect","bscScanApi","then","result","type","payload","PageWrapper","title","combineMenu","Page","container","BinanceCoinBnbLogo","margin","Intl","NumberFormat","format","binance","EthereumEthLogo","ethereum","BitcoinBtcLogo","bitcoin","Card","shadow","borderSize","StrataTodayLogo","marginLeft","onClick","url","pancakeSwapLink","window","open","PancakeswapCakeLogo","Icon","icon","Button","length","size","isLight","rounded","isOutline","borderRadius","stretch","tokenname","textAlign","currentCap","hardCap","pair","tokenaddress","isLink","href","map","item","index","cursor","iconColor"],"sourceRoot":""}